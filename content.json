{"pages":[{"title":"About Me","text":"Education Shenzhen College of International Education, Class of 2022 Programming SCIErs Miniapp Indie developer VATSIM P.R.C. Division Assistant Webmaster (VATPRC8A) Avation VATSIM P1 Pilot, C1 Controller","link":"/about/index.html"}],"posts":[{"title":"Fastai Learning Note","text":"Lesson 1Always includes these lines123456%reload_ext autoreload%autoreload 2%matplotlib inlinefrom fastai.vision import *from fastai.metrics import error_ratebs = 64 Get Datasets with Fast AI12path = untar_data(URLs.PETS)path.ls() Setting up DataBunch1data = ImageDataBunch.from_name_re(path_img, fnames, pat, ds_tfms=get_transforms(), size=224, bs=bs).normalize(imagenet_stats) In Fast AI, almost every data is going to be a databunch. We use size = 224 as almost models are training in 7 * 7. TrainingWhat’s in?1data.show_batch(rows=3, figsize=(7,6)) Get the model1learn = cnn_learner(data, models.resnet34, metrics=error_rate) Resnet 34: A great picture analyzing model, also have resnet50 (34 -&gt; 34 layers) Train it12learn.fit_one_cycle(10)learn.save('stage-1') # Always save your file after training What’s out?123456interp = ClassificationInterpretation.from_learner(learn)interp.plot_top_losses(9, figsize=(15,11)) # Get pics that have top losses# Which type is most confused?interp.plot_confusion_matrix(figsize=(12,12), dpi=60)interp.most_confused(min_val=2) More TrainingUnfreezing and train all the layerBasicly, the default model is only training the top layers, but if we unfreez it we can train everylayer equaly However, we need to find the LR first 12learn.lr_find()learn.recorder.plot() We want to find the down slope 12learn.unfreeze()learn.fit_one_cycle(10, max_lr=slice(1e-4,1e-2)) Then our error_rate reduced a lot! (Hopefully) Lesson 2Things that can go wrongLR too highvalid_loss &gt; 1 Cannot undo, just re-creat the model LR too smalllearning really slow, train_loss &gt; valid_loss Too few epochstrain_loss &gt; valid_loss Too many epochsOverfitting Error rate decreasing and then start to increase SGDTensor - Regular shape arrayRank - how many ‘axis’ do we have (1D, 2D, 3D) 12345tensor(3., 2.) # a rank1 tensortorch.ones(n, 2) # n x 2 (n rows and 2 cols), fill with 1s. So it's a rank2 tensorimport matplotlib as pltplt.scatter(...) # Matplotlib also accept tensor Vocab Learning Rate - The rate of learning (The thing we times our gradient every time) Epoch - One complete run of our datas Minibatch - A random set of our data Model / Architecture - A mathematical function that we need to find the parameters Parameters - Coefficient, the number that we are updating in training","link":"/2020/Fastai-learning-note/"},{"title":"Cryptography Learning Note","text":"HistorySymmetric CipherBoth encrypter and decrypter use same key Substitution Cipher Key: a -&gt; c, b -&gt; z, c -&gt; b … What is the key space? 26! (26 fractional) How to break it? Use frequency of English letters (e.g. E is the most common letter) ‘e’ 12.7%, ‘t’ 9.1%, ‘a’ 8.1% … Use frequency of pairs of letters ‘he’, ‘an’, ‘in’, ‘th’ … Caesar Cipher (No key, not really a cipher) a -&gt; d, b -&gt; e, c -&gt; f … Vigener Cipher (16th century, Rome) How to break it? Assume we know the length of key first The most common letter in the given position of the group (e.g. the first leter of a group) Then use the freq. of english letters to find the key Rotor Machines (1870-1943) Substitution Cipher but change every letter (Rotating) If we click C 3 times, we get SKE Break? English freq Most famous the Enigma routers that routating at different rate Data Encryption Standard (1974) DES key = $2^56$, 64bits Unsafe today Today: AES (128bits) (2001), Sala20 (2008) Quick Discrete ProbabilityU: finite set$$U = {0,1}^n$$ e.g. $${0,1}^2 = {00,01,10,11}$$ P: Probability distribution over U is a function P:U -&gt; [0,1] $$\\sum_{x \\in U}{P(x)} = 1$$ Uniform distribution: $$\\text{For all }x\\in U: P(x) = 1 / |{U}|$$ Point distribution: $$P(x_0) = 1, \\forall x \\ne x_0 : P(x) = 0$$ Events:$$\\text{For a set } A \\subseteq U: P$$","link":"/2020/Cryptography-Learning-Note/"}],"tags":[{"name":"Notes","slug":"Notes","link":"/tags/Notes/"},{"name":"Machine Learning","slug":"Machine-Learning","link":"/tags/Machine-Learning/"}],"categories":[{"name":"CS Learning","slug":"CS-Learning","link":"/categories/CS-Learning/"},{"name":"Math Learning","slug":"Math-Learning","link":"/categories/Math-Learning/"}]}