{"pages":[{"title":"About Me","text":"Education Shenzhen College of International Education, Class of 2022 Programming SCIErs Miniapp Indie developer VATSIM P.R.C. Division Assistant Webmaster (VATPRC8A) Avation VATSIM P1 Pilot, C1 Controller","link":"/about/index.html"}],"posts":[{"title":"Fastai Learning Note","text":"Course Link: Fastai Course V3 Lesson 1Always includes these lines123456%reload_ext autoreload%autoreload 2%matplotlib inlinefrom fastai.vision import *from fastai.metrics import error_ratebs = 64 Get Datasets with Fast AI12path = untar_data(URLs.PETS)path.ls() Setting up DataBunch1data = ImageDataBunch.from_name_re(path_img, fnames, pat, ds_tfms=get_transforms(), size=224, bs=bs).normalize(imagenet_stats) In Fast AI, almost every data is going to be a databunch. We use size = 224 as almost models are training in 7 * 7. TrainingWhat’s in?1data.show_batch(rows=3, figsize=(7,6)) Get the model1learn = cnn_learner(data, models.resnet34, metrics=error_rate) Resnet 34: A great picture analyzing model, also have resnet50 (34 -&gt; 34 layers) Train it12learn.fit_one_cycle(10)learn.save('stage-1') # Always save your file after training What’s out?123456interp = ClassificationInterpretation.from_learner(learn)interp.plot_top_losses(9, figsize=(15,11)) # Get pics that have top losses# Which type is most confused?interp.plot_confusion_matrix(figsize=(12,12), dpi=60)interp.most_confused(min_val=2) More TrainingUnfreezing and train all the layerBasicly, the default model is only training the top layers, but if we unfreez it we can train everylayer equaly However, we need to find the LR first 12learn.lr_find()learn.recorder.plot() We want to find the down slope 12learn.unfreeze()learn.fit_one_cycle(10, max_lr=slice(1e-4,1e-2)) Then our error_rate reduced a lot! (Hopefully) Lesson 2Things that can go wrongLR too highvalid_loss &gt; 1 Cannot undo, just re-creat the model LR too smalllearning really slow, train_loss &gt; valid_loss Too few epochstrain_loss &gt; valid_loss Too many epochsOverfitting Error rate decreasing and then start to increase SGDTensor - Regular shape arrayRank - how many ‘axis’ do we have (1D, 2D, 3D) 12345tensor(3., 2.) # a rank1 tensortorch.ones(n, 2) # n x 2 (n rows and 2 cols), fill with 1s. So it's a rank2 tensorimport matplotlib as pltplt.scatter(...) # Matplotlib also accept tensor Vocab Learning Rate - The rate of learning (The thing we times our gradient every time) Epoch - One complete run of our datas Minibatch - A random set of our data Model / Architecture - A mathematical function that we need to find the parameters Parameters - Coefficient, the number that we are updating in training","link":"/2020/Fastai-learning-note/"},{"title":"Cryptography Note 1 - Intro","text":"Course Link: Coursera Cryptography I by Stanford University What is CryptographyCore Secret key establishment Secure communication More Digital signature Different signature for differnet documents Anonymous communication Mix net (Proxies) Bidirectional Anonymous digital cash ProtocolsSecure multi-party computationAnything that can done with trusted auth. can also done without auth. (The blue line is the protocols) Crypto magic Privately outsourcing computation The server know nothing about what they’re computing Zero knowledge Alice can prove that she knows the factor of N, but Bob learn nothing about the solution A rigorous science3 steps Precisely specify threat model Propose a construction Prove that breaking construction under threat mode will solve an underlying hard problem HistorySymmetric CipherBoth encrypter and decrypter use same key Substitution Cipher Key: a -&gt; c, b -&gt; z, c -&gt; b … What is the key space? 26! (26 fractional) How to break it? Use frequency of English letters (e.g. E is the most common letter) ‘e’ 12.7%, ‘t’ 9.1%, ‘a’ 8.1% … Use frequency of pairs of letters ‘he’, ‘an’, ‘in’, ‘th’ … Caesar Cipher (No key, not really a cipher) a -&gt; d, b -&gt; e, c -&gt; f … Vigener Cipher (16th century, Rome) How to break it? Assume we know the length of key first The most common letter in the given position of the group (e.g. the first leter of a group) Then use the freq. of english letters to find the key Rotor Machines (1870-1943) Substitution Cipher but change every letter (Rotating) If we click C 3 times, we get SKE Break? English freq Most famous the Enigma routers that routating at different rate Data Encryption Standard (1974) DES key = $2^56$, 64bits Unsafe today Today: AES (128bits) (2001), Sala20 (2008) Quick Discrete ProbabilityU: finite set$$U = {0,1}^n$$ e.g. $${0,1}^2 = {00,01,10,11}$$ P: Probability distribution over U is a function P:U -&gt; [0,1] $$\\sum_{x \\in U}{P(x)} = 1$$ Uniform distribution: $$\\text{For all }x\\in U: P(x) = 1 / |{U}|$$ Point distribution: $$P(x_0) = 1, \\forall x \\ne x_0 : P(x) = 0$$ Events:$$\\text{For a set } A \\subseteq U: P$$","link":"/2020/Cryptography-Note1/"},{"title":"Cryptography Note 2 - Stream Ciphers","text":"Course Link: Coursera Cryptography I by Stanford University Cipher A cipher defined over K (key space), M (possible message), e (posible cipher text) Cipher is a pair of (E, D) (Encrypt and Decrypt algorithm) E: K x M -&gt; eD: K x e -&gt; M D(k, E(k, m)) = m E is often randomizedD is often deterministic The One Time PadVernam, 1917 First example of a ‘secure’ Cipher $$M = E = {0, 1}^n$$ Also need a key $$key = (\\text{rand bit string as long as the msg.})$$ $$E(k, m) = k \\oplus m , D(k, c) = k \\oplus c$$ However, you can also get the key $$\\text{key} = m \\oplus c$$ Also, the key is as long as the plaintext (Really long) It’s perfect secure! ! SecrecyBasic idea: Cypher text should reveal no ‘info’ about plain text Perfect SecrecyPr(E(k, m0)) = c = Pr(E(k, m1)) = cGiven a cypher text, can’t tell if msg is m0 or m1 (For all m0, m1) One Time Pad has perfect secrecy$$\\forall m, c: Pr[E(k,m)=c] = \\frac{\\text{num of keys k in K such that }E(k,m) = c}{\\text{total num of key}}$$Since num of keys k in K such that E(k,m) = c is actually 1, OTP has perfect secrecy So, we can conclude that OTP do not have Cypher text only attack!!!(but other attacks possible) Also, Perfect secrecy =&gt; |K| ≧ |M| (Num of key ≧ Num of msg) However, OTP is hard to use in practice because the key is too long Attact 1: Two time pad$$C_1 \\leftarrow m_1 \\oplus PRG(K) \\text{ And } C_2 \\leftarrow m_2 \\oplus PRG(K)$$ Eavesdropper does $$C_1 \\oplus C_2 \\rightarrow m_1 \\oplus m_2$$Enough redundancy in English and ASCII to get plain text! Real worldProject Venona Rusian, 1941-1946 Key generated by throwing dice Find it’s boring to throwing dice so reused MS-PPTP Windows NT Client &lt;-&gt; Server Messages from client and server use same key YOU NEED DIFFERENT KEYS FOR C -&gt; S and S -&gt; C 802.11b WEP A very bad protocol PRG(IV || k) IV is a 24bit, it inincrement by 1 evertime k is a long term key IV and ciphetext is send together Problem Repeated IV after 16M frames On some 802.11 cards IV resets to 0 after power cycle After 10^6 fram,you can recover the long term key k (Since the changing part IV is relative short) Solution PRG(k) first, use part of the result for the key of fram Attact 2: No integrityThe attacker XOR another thing to the key User: E(m) = m ⨁ kAttacker: (m ⨁ k) ⨁ pUser: D() = m ⨁ p One Time Pad is malleable (Easy to edit the cipher text) Stream CiphersMaking OTP Practical with Pseudo Random Generators Encrypt $$E(k, m): m \\oplus G(k)$$Decrypt $$D(k, c): c \\oplus G(k)$$ SecurityCannot have perfect secrecy!! (Key shorter than msg) PRGA function G take keys to make longer key(a pseudo random sequence) $$G:{0, 1}^s \\rightarrow {0, 1}^n , n &gt; s$$ The PRG mast be unpredictableIf it’s not, the hacker can use the encrypted text and known prefix (e.g. From in SMTP) and XOR them to get the pseudo random sequence It is predictable when: Exist an “eff” algorithm A, $$Pr[A(G(k)|{1,…,i}) = G(k)|{i+1}] \\ge 1/2 +\\varepsilon$$For some “Non-negligible” ε Non-negligibleHave different value in different area In practice, ε is a scalar and$$\\text{non-neg: }\\varepsilon \\ge 1/2^{30}$$In theory, ε is a function$$\\text{non-neg: }\\exists d: \\varepsilon(\\lambda) \\ge 1/\\lambda^d \\text{ inf. often}$$(ε &gt;= 1/polu, for many λ) Weak RPGsLinear congruential generatorParameter a, b, pr[0] = seed r[i] &lt;- a · r[i-1] + b output few bits of r[i] i++ (And back to 1) Don’t use any random from glibc Random Real-World Stream CiphersRC4(Do not use in new system)128 bits seed -&gt; 2048 bits -⟲-&gt; 1 byte per roundUsed in HTTPS and WEP Weakness Bias in initial output Pr[2nd byte = 0] = 2/256 Prob. of (0,0) is 1/256² + 1/256³ Related key attacks CSS (Broken)Used on CD/DVD Linear feedback shift register (LFSR): Shift the right evey clock cycle, choose several bit and XOR them, use it as the first bit of the result How it workSeed: 5 bytes (40 bits) 1||First 2 bytes of the key(key) =&gt; 17 bit LFSR – Run for 8 cycle –&gt;1||Last 3 bytes of the key(key) =&gt; 25 bit LFSR – Run for 8 cycle –&gt; –&gt; Plus together and mod 256 -&gt; Output 1 byte per round Break it2¹⁷ timesAs we know the prefix(20 byte) of the plaintex (Because it’s a DVD)Try all 2¹⁷ possible value of the first LFSR, then we will see the 25bit LFSR eStream (2008)PRG: ${0,1}^s \\times R -&gt; {0,1}^n$R is a nonce, which is a non-repeating value for a given key$$E(k,m;r) = m \\oplus PRG(k, r)$$So you can repeat the use of key as the R is changing Salsa 20Sala20: ${0,1}^{128} \\times {0,1}^{64} -&gt; {0,1}^n$Salsa 20(k; r) := H(k, (r, 0)) || H(k, (r, 1)) || … PRG SecurityLet $G:K \\rightarrow {0,1}^n$ be a PRG​ Statistical TestAn algorithm A that A(x) outputs ‘0’(Not random) or ‘1’(Random) Example: A(x) = 1 if and only if $ |#0(x) - #1(x)| \\le 10\\sqrt{n} $ A(x) = 1 if and only if $ #00(x) - \\frac{n}{4} \\le 10\\sqrt{n} $ A(x) = 1 if and only if $\\text{max-run-of=0(x)} \\le 10 \\log_2{n}$ …… Advantage of Statistical TestLet $G:K \\rightarrow {0,1}^n$ be a PRG​ and A is a stats test Adv close to 1: A can distinguish G from rand Adv close to 0: A cannot distinguish G from rand (So it’s a good G) e.g. A(x) = 0 -&gt; Adv = 0 Crypto Definition of secure PRG$$\\forall\\text{ ‘efficient’ statistics test} A: Adv_{PRG}[A,G] \\text{is ‘negligible’}$$So there’s no provably secure PRGs Easy fact: PRG predictable =&gt; PRG is insecure An unpredictable PRG is secure (Yao’82)$$\\text{If} \\forall i \\in {0, …, n-1} \\text{PRG G is unpredictable at position i}$$ $$\\text{then G is a secure PRG}$$ Semantic SecurityCipher text should revel no information of the plain text Exp(0) give m0 and Exp(1) give m1. If the Adv A cannot find the difference between Exp(0) and Exp(1) For all efficient A, $Adv_{ss}[A,E]$ is negligible","link":"/2020/Cryptography-Note2/"},{"title":"Quick Review For AP Stats","text":"The notes I took while preparing for the AP Stats TA interview Collecting DataSampling Methods Census Sampling Survey Sampling with Replacement Sampling without Replacement Biased Judgmental sampling Convenience sampling Volunteer sampling Simple Random Sampling SRS Numbering every individual Generate random numbers to divided them into groups Stratified Random Sample Each strata do not have much difference SRS in each strata Cluster Sampling Inside each cluster - lots of difference Randomly choose clusters Systematic Sampling Sorting Skip k, then choose one, repeating until enough sample Bias Volunteer Undercoverage Nonresponse Wording Non-random sampling Experiment Design Response Variable Explanatory Variable Confounding Variable Placebo Double blind &amp; Single Blind experiment Match Pairs Design Probability Random Variables and Probability Distribution Sample Space The set of all possible results Complement of an Event $A’ = 1-P(A)$ $P(A \\cap B) = P(AB)$ Conditional Event $P(B\\mid A) = \\frac{P(A \\cap B)}{P(B)}$ The probability of A happening when B is happening Binomial Distribution BINS Binary: 0 or 1 Independent: Trials must be independent Number: number of trails n is fixed Success: Probability p of success is same binompdf(n,p,k) $P(X = k)$ binomcdf(n,p,k) $P(X \\le k)$ Geometric Distribution The number of trails Y that is takes to get a success. geometpdf(p,n) $P(Y = n)$ geometcdf(p,n) $P(Y \\le n)$ Sampling Distribution CLT - Central Limit Theorem When n &gt; 30, a sampling distribution of the mean of a random variable will be approximately normal distributed Four Distributions Sampling Distribution of Sample Mean $\\mu_x = \\mu$ $\\sigma_\\hat x = \\frac{\\sigma}{\\sqrt{n}}$ Sampling Distribution of Sample Proportion $\\mu_x = p$ $\\sigma_\\hat p = \\sqrt{\\frac{p(1-p)}{n}}$ Sampling Distribution of a Difference between two Independent Sample Means Mean of $(\\mu_1 - \\mu_2) = \\overline{x_1} - \\overline{x_2}$ Standard deviation $ = \\sqrt{\\frac{\\sigma_1^2}{n_1} + \\frac{\\sigma_2^2}{n_2}}$ Sampling Distribution of a Difference between two Independent Sample Proportion Mean of ($\\hat p_1 - \\hat p_2$) = $p_1 - p_2$ Standard deviation $= \\sqrt{\\frac{p_1(1-p_1)}{n_1} + \\frac{p_2(1-p_2)}{n_2}}$ Inference for categorical dataConfidence Interval Level of Confidence % of confidence intervals from many samples that we expect to contain the true population parameter “We are xx% confident that the real mean will in the interval between xxx and xxx” When $\\sigma$ is known, using Z-interval When $\\sigma$ is unknown, using t interval N &gt; 30 Sample standard deviation: do not forget (n-1) DF: n-1 For a population proportion $n\\hat p \\ge 5, n(1-\\hat p) \\ge 5$ Two sample Interval TestsTypes of Error $\\alpha = $ The probability of making Type I error $\\beta = $ The probability of making Type II error One Sample TestZ-test for population mean $H_0: \\mu = \\mu_0$ $H_0: \\mu \\not= \\mu_0$ OR $H_0: \\mu &lt; \\mu_0$ OR $H_0: \\mu &gt; \\mu_0$ T-test $H_0: \\mu = \\mu_0$ $H_0: \\mu \\not= \\mu_0$ OR $H_0: \\mu &lt; \\mu_0$ OR $H_0: \\mu &gt; \\mu_0$ Two sample Test2 sample Z test (For proportion) Requirement Random Sample size less than 10% Large Counts 2 sample T test Requirement Random Sample size less than 10% Normal Normal distribution OR n1 &gt; 30, n2 &gt; 30 Select NO Chi-Square Test Categorical variables Chi-square test for Goodness’s of fit One-Variable Data $H_0: P_1 = xx, P_2 = xx, P_3 = xx$ $H_a: \\text{At least two of the }P_i\\text{‘s are incorrect}$ df = num of category - 1 Requirement Random Sample size less than 10% All expected counts must be at least 5 If it’s statistically significant, we can conclude that our variable has a distribution different from the one stated. AND We need to look at the individual chi-square statistics that are add together to produce the test statistic. STATE what terms contribute most to the chi-square statistic Chi-square test for homogeneity $H_0$: There is no difference in the distribution of a categorical variable for several populations or treatments. $H_a$: There is a difference in the distribution of a categorical variable for several populations or treatments. $\\text{expected count} = \\frac{Row\\space total \\cdot Colum\\space total} {table total}$ df = (number of row - 1)(number of columns - 1) Requirement Random Sample size less than 10% All expected counts must be at least 5 Chi-square test for independence $H_0$: There is no association between two categorical variables in the population of interest. $H_a$: There is an association between two categorical variables in the population of interest. Requirement Random Sample size less than 10% All expected counts must be at least 5","link":"/2020/Quick-Review-For-AP-Stats/"},{"title":"Intro to Logic Note","text":"Course Link: Introduction to Logic Section1 IntroObservations -&gt; Conclusions -&gt; Explanations Logical Sentences Dana likes Cody. Abby does not like Dana. Bess likes Cody or Dana. Abby likes everyone that Bess likes. Cody likes everyone who likes her. Nobody likes herself Express only what we know Logical EntailmentSentence is logically entailed if it can be proved by the logical sentences Bess likes Cody. Bess does not like Dana. Everybody likes somebody. Everybody is liked by somebody. BUT these are not: Abby likes Bess Abby does not likes Bess …… Types of ReasoningDeduction: Something must be correct so long as the premises on which they are based are correct. All Accords are Hondas. All Hondas are Japanese. Therefore, all Accords are Japanese. Induction:From the particular to the general I have seen 1000 black ravens. I have never seen a raven that is not black. Therefore, every raven is black. Abduction: From effects to possible causes If there is no fuel, the car will not start. If there is no spark, the car will not start. There is spark. The car will not start. Therefore, there is no fuel. Analogy: Conclusion based on similarity of two situation The flow in a pipe is proportional to its diameter. Wires are like pipes. Therefore, the current in a wire is proportional to diameter Deduction is the only way that guarantees its conclusions in all cases Formalization ∧ And If ⇒ Then ∨ Or If a proposition on the left of one sentence is the same as a proposition on the right, it’s okay to drop the two symbols If a constant is repeated on the same side of a single sentence, only one of them can be left","link":"/2020/Intro-to-logic/"},{"title":"Cryptography Note 3 - Block Ciphers","text":"Course Link: Coursera Cryptography I by Stanford University Block ciphers Overview Examples 3DES: n = 64, k = 168 AES: n = 128, k = 128/192/256 Built by iterationR(kn, …… (R(k2, R(k1, plaintext)))) For 3DES, n = 48, for AES-128, n =10 Abstractly: PRP and PRFPseudo Random Function$$F: K \\times X \\rightarrow Y$$ There’s a efficient algorithm to evaluate F(k, x) Pseudo Random Permutation$$E: K \\times X \\rightarrow X$$ Efficient deterministic algorithm to evaluate E(k, x) E(k, ) is one-to-one Efficient inversion algorithm D(k, y) Any PRP is also a PRF PRP ExamplesAES: $K \\times X \\rightarrow X$ where $K = X = {0,1}^{128}$ 3DES: $K \\times X \\rightarrow X$ where $K = {0,1}^{168}$, $X = {0,1}^{64}$ Secure PRFsLet $F: K \\times X \\rightarrow Y$ Be a PRF Funs [X, Y]: The set of all functions from X to Y $S_F$ = ${F(k, \\cdot) \\text{ s.t. } k \\in K} \\subseteq $ Funs[X,Y] It’s secure if A random function in Funs[X,Y] is indistinguishable from a random function in $S_F$ Basically, cannot tell the difference between the pseudorandom result and random result (f(x) and F(k, x)) The Data Encryption Standard (DES)History 1970, IBM, Lucifer Key Len 128bits, block Len 128bits 1976, NBS, DES, Federal standard Key Len 56bits, block Len 64bits 1997 Broken by exhaustive search 2000 AES replace DES Widely used in banking and commerce Core idea: Feistel NetworkGiven functions $f_1, …, f_d: {0,1}^n -&gt; {0,1}^n$ Feistel Network is invertible! Used in many block ciphers, but not in AES A theorem about Feistel Network$$f: K \\times {0,1}^n \\rightarrow {0,1}^n \\text{a secure PRF} \\\\text{3-round Fesitel} F: K^3 \\times {0,1}^{2n} \\rightarrow {0,1}^{2n} \\text{a secure PRP}$$ (3 keys are independent) DES: 16 round Feistel network F(Ki, x) S-boxsShould follow lots of rules, simple random func will not work Far away to be linear func 4 to 1 maps …… Exhaustive Search AttacksGoal: Given a few input output pairs $(m_i,c_i = E(k, m_i))\\space i=1,…,3$ , find key k Lemma: There’s at most one key k such that c = DES(k, m) (with prob &gt;= 1 - 1/256) DES Challenge Publish 3 cypher text without plain text, and some plain text cypher text pairs Goal: Find $k \\in {0,1}^{56}$ Timeline 1997: Internet search - 3 months 1998: EFF Machine - 3 days 1999: Combined search - 22 hours 2006: COPACOBANA (120 FPGAs) - 7 days (Cheap) Strengthening Method1 : Triple DES Let $E : K \\times M \\rightarrow M \\text{ be a block cipher}$ Define $3E: K^3 \\times M \\rightarrow M$ as $3E((k_1,k_2,k_3),m) = E(k1,D(k2,E(k3)))$ Key size = 168bits Why not double DES? E(k2, M) = D(k1, c) Attack For all $k\\in {0,1}^{56}$, test if D(k, C) is in 2nd column If so, then $E(k^i,M) = D(k,C)=&gt; (k^I, k) = (K_2,k_1)$ Strengthening Method2: DESX $E:K\\times {0,1}^n \\rightarrow {0,1}^n$ A block cipher Define EX as $EX((k_1,k_2,k_3), m) = k_1 \\oplus E(k_2, m\\oplus k)3$ For DESX, Ken-len = 14 bits, but attack in time 2^120 More attacks on Block CiphersAttacks on the implementation Side channel attacks Measure time to encode and decode Measure power for encode and decode Fault attacks Computing errors in the last round expose the secret key k Do not even implement crypto primitives yourself Linear and differential attacksIf it’s too near to the linear function, linear attack$$Pr[(m[i_1]\\oplus…\\oplus[m[i_r]) \\oplus (c[j_1]\\oplus…\\oplus[c[j_r]) = k[l_1]\\oplus…\\oplus[k[l_r]] = \\frac{1}{2} +\\varepsilon$$ ThemGiven $1/\\varepsilon^2$ random (m, c=DES(k.m)) pairs then$$k[l_1,…,l_u] = MAJ [ m[i_1,…,i_r] \\oplus c[j_1,…,j_r]]$$ AttacksFor DES, $\\varepsilon= 1/2^{21}$ Can find 14 key ‘bits’ this way in time $2^{42}$ Then the search will cost$2^{42}$ Total attack time $2^{43}$ LessonA tiny bit of linearly in $S_5$ lead to a $2^{42}$ time attack Do not design ciphers yourself Quantum attacksLet $f:X \\rightarrow {0,1}$ be a function Goal: find $x \\in X$ such that f(x) = 1 Classical computer: $O(|X|)$ Quantum computer: $O(|X|^{1/2})$ DES: $2^{28}$, AES-128: $2^{64}$ Quantum computer: 256-bits key ciphers (e.g. AES-256)","link":"/2020/Cryptography-Note3/"},{"title":"SCIErs Release Logs","text":"Online Version: v0.8.3Disclaimer使用本服务代表您知晓并同意以下内容： 本服务由非官方开发 登陆使用的 Student ID 会被记录在腾讯云服务器 你的所有请求会在 HTTPS 加密后通过腾讯云服务器转发 本服务为个人兴趣开发，本人及本人所属团体（SCIE.PRO）不对本服务的可用性给予保障 本服务不会在服务端记录以下内容： 学生账户密码 密码会在手机本地进行 MD5 加 盐 加密，密文为一次性登陆凭证且现有科技下难以解密（不考虑买得起量子计算机后） 学生课程表 学生 Assessment 列表 请注意，在您选择记住密码后，密码将会被明文保存在手机微信中 根据微信开发者文档，仅本小程序可以读取储存信息 已知问题/功能建议 Bugs/Features [0.7.2 修复] Timetable AB周 [0.7 新增] Homework 功能 [0.6.5 修复] Timetable 在周末默认显示空 [0.6.4 修复] Login 使用大写 s 报错 [0.6.4 修复] Login 语法错误，需要增加提示要求输入 s 开头学号 [0.6.4 新增] Assessment 页面分栏，各个学科在顶部选择 [0.6.5 新增] Calendar 日期增加 Picker BUG 反馈 &amp; 功能建议小程序右上角 ··· -&gt; 反馈与投诉 -&gt;产品建议 小程序码 更新日志To Do 重构 Attendance 考勤查询 试图与学校合作简化登陆 v0.8v0.8.3 👨🏻‍💻 🌟 [新增] Calendar 增加「Daily Bulletin」 [修改] 首页网络请求逻辑修改 v0.8.2 [新增] Index 增加 Logout 功能（长按姓名） [修改] 更换至微信自带导航栏，解决部分手机显示错误的问题 v0.8.1 [新增] Index 增加「下一课程」功能 [新增] Index 增加「Daily Bulletin」功能 [修改] Index 首页重新设计 v0.70.7.6 [新增] Timetable 显示老师名字 [新增] Timetable 显示社团课 0.7.5 [修改] Login 记住密码理论上可以持续更长时间 [修改] Login 登陆错误消息接口修改 [修改] Index 每次显示都加载 [修改] Timetable 加载错误时信息错误 0.7.4 [修改] Login 业务逻辑优化 [修改] 所有页面增加大量注释 0.7.3 [修改] Timetable AB周/撞课显示不全 非本周课将会以灰色显示 0.7.2 [修改] 所有页面无网络时假死 0.7.1 [新增] Homework 标记完成（与 CMS 标记完成同步） [修改] Homework 显示不完整 0.7.0 [新增] Homework 功能 [修改] Assessment 部分特定情况下出现野指针 v0.60.6.5 [新增] 密码本地保存功能 [修改] Assessment 部分 Class ID 显示错误 [修改] Calendar 日期增加 Picker [修改] Timetable 在周末提示空 0.6.4 [新增] Assessment Formal 与 Informal 分颜色显示 [新增] Assessment 最新六条 [修改] Assessment 查询页面使用顶部 Tab 分离 [修改] Login 提示信息及样式优化 [修改] Login 页面使用大写 S 登陆后部分页面无法使用 0.6.3 [修改] Assessment 部分项目显示多个 Out Of [修改] Login 页面处理方式，理论提高登陆速度 0.6.2 [新增] Classroom 页面日期及 Period 选择器 [修改] Classroom 页面大量显示 BUG [修改] Classroom 页面教室显示逻辑 [修改] Login 身份认证逻辑错误 [删除] Classroom 数据查询 Mock 返回 0.6.1 [新增] Classroom 空教室查询功能 [新增] Assessment 查询动画 [修改] Assessment 查询返回错误值 [修改] Timetable 默认显示当天 v0.4 - v0.5 [新增] Calendar 校历查询页面 [修改] Login 跳转逻辑，在本地拥有有效登陆凭证时不再跳转至登陆界面 [修改] Assessment 查询样式 [修改] Timetable 课程图标 [删除] Me 功能 *v0.5.6 版本开启内测 v0.1 - v0.3 [新增] CMS 登陆并获得 Cookie [新增] Timetable 页面 [新增] Assessment 查询页面 [修改] 项目名称由 SCIEr 正式修改为 SCIErs [删除] Timetable 页面可以查询任何人课表的输入框 [删除] Timetable 页面可行性验证用 Mock数据","link":"/2020/SCIErs-ReleaseLog/"},{"title":"AS Econ Selfstudy Notes","text":"Basic economic ideas and resource allocation","link":"/2020/AS-Econ-1/"}],"tags":[{"name":"Notes","slug":"Notes","link":"/tags/Notes/"},{"name":"Machine Learning","slug":"Machine-Learning","link":"/tags/Machine-Learning/"},{"name":"SCIErs","slug":"SCIErs","link":"/tags/SCIErs/"},{"name":"Highschool Math","slug":"Highschool-Math","link":"/tags/Highschool-Math/"},{"name":"Econ","slug":"Econ","link":"/tags/Econ/"},{"name":"MiniApp","slug":"MiniApp","link":"/tags/MiniApp/"}],"categories":[{"name":"CS Learning","slug":"CS-Learning","link":"/categories/CS-Learning/"},{"name":"Math Learning","slug":"Math-Learning","link":"/categories/Math-Learning/"},{"name":"AS Notes","slug":"AS-Notes","link":"/categories/AS-Notes/"},{"name":"Dev","slug":"Dev","link":"/categories/Dev/"}]}